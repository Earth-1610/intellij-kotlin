buildscript {
    ext.kotlin_version = '1.3.21'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.2.51'

    id "org.jetbrains.intellij" version "0.3.7"
}

group 'com.itangcent'
version '1.0-SNAPSHOT'

apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.intellij'
apply plugin: 'idea'

intellij {
//    version idea_version
//    version '2018.2.1'
    version '2017.3.5'
//    plugins 'git4idea'
    pluginName plugin_name
    updateSinceUntilBuild false
    downloadSources true
    sandboxDirectory "idea-sandbox"
    updateSinceUntilBuild false
    sameSinceUntilBuild false
}



repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

// https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'

// https://mvnrepository.com/artifact/commons-io/commons-io
    compile group: 'commons-io', name: 'commons-io', version: '2.6'

// https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-reflect
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    compile "com.google.inject:guice:4.2.2"

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

jar {
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }

}

//task makeJar(dependsOn: ['compileKotlin', 'javadoc'], type: Jar) {
task makeJar(dependsOn: ['compileKotlin'], type: Jar) {
    delete 'build/libs/intellij-kotlin.jar' //生成的jar存放路径
    appendix = "tm"
    baseName = "intellij-kotlin"
    version = "1.0.0"
    classifier = "release"
    //后缀名
    extension = "jar"
    //最终的 Jar 包名，如果没设置，默认为 [baseName]-[appendix]-[version]-[classifier].[extension]
    archiveName = "intellij-kotlin.jar"
    //需打包的资源所在的路径集
    def srcClassesDir = [project.buildDir.absolutePath + "/classes/kotlin/main"] //Kotlin 生成的classes文件路径
    //初始化资源路径集
    from srcClassesDir
    //只导入资源路径集下的部分资源
    include "**/*.class"
}